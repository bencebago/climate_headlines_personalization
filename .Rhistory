geom_text(aes(label = sprintf("%.2f", mean_agreement)),
vjust = -0.5, fontface = "bold") +
scale_fill_manual(values = colors) +
scale_y_continuous(limits = c(0, 7), breaks = 1:7) +
labs(
title = "Mean Agreement Scores by Lede Type",
subtitle = "Error bars show 95% confidence intervals",
x = "Lede Type",
y = "Mean Agreement Score (1-7 scale)",
fill = "Lede Type"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 11),
axis.text.x = element_text(size = 10),
legend.position = "none"
)
# 2. Violin plot
p2 <- ggplot(clean_data, aes(x = lede_label, y = agreement_score, fill = lede_type)) +
geom_violin(alpha = 0.7, trim = FALSE) +
stat_summary(fun = mean, geom = "point", shape = 23, size = 3,
fill = "white", color = "black") +
scale_fill_manual(values = colors) +
scale_y_continuous(breaks = 1:7) +
labs(
title = "Agreement Score Distributions by Lede Type",
subtitle = "Violin plots showing full distribution shape with means (diamonds)",
x = "Lede Type",
y = "Agreement Score (1-7 scale)",
fill = "Lede Type"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 11),
axis.text.x = element_text(size = 10),
legend.position = "none"
)
# 3. Additional plot comparing by model (Llama vs GPT)
model_data <- clean_data %>%
mutate(model = case_when(
lede_type %in% c("neutral_llama", "skeptic_llama") ~ "Llama",
lede_type %in% c("neutral_gpt", "skeptic_gpt") ~ "GPT"
),
framing = case_when(
lede_type %in% c("neutral_llama", "neutral_gpt") ~ "Neutral",
lede_type %in% c("skeptic_llama", "skeptic_gpt") ~ "Skeptic"
))
p3 <- ggplot(model_data, aes(x = framing, y = agreement_score, fill = model)) +
geom_violin(alpha = 0.7, position = position_dodge(width = 0.8)) +
stat_summary(fun = mean, geom = "point", shape = 23, size = 3,
position = position_dodge(width = 0.8),
fill = "white", color = "black") +
scale_fill_manual(values = c("Llama" = "#FF6B35", "GPT" = "#4A90E2")) +
scale_y_continuous(breaks = 1:7) +
labs(
title = "Agreement Scores by Model and Framing",
subtitle = "Comparing Llama vs GPT across neutral and skeptic framings",
x = "Framing",
y = "Agreement Score (1-7 scale)",
fill = "Model"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 11),
legend.position = "bottom"
)
# Combined plot using ggarrange
combined_plot <- ggarrange(p1, p2,
ncol = 2, nrow = 1,
labels = c("A", "B"),
font.label = list(size = 14))
# Three-panel plot
three_panel_plot <- ggarrange(p1, p2, p3,
ncol = 3, nrow = 1,
labels = c("A", "B", "C"),
font.label = list(size = 14))
# Print plots
print(p1)
print(p2)
print(p3)
print(combined_plot)
print(three_panel_plot)
# Return plots as a list
return(list(
bar_plot = p1,
violin_plot = p2,
model_comparison = p3,
combined_plot = combined_plot,
three_panel_plot = three_panel_plot
))
}
# Call the function with your data
# Assuming your processed long_data is available
plots <- create_lede_agreement_comparison(long_data)
library(renv)
renv::restore()
library(tidyverse)
library(lmerTest)
library(ggplot2)
library(tidyr)
library(jsonlite)
library(ggplot2)
library(httr)
library(readxl)
library(broom)
library(purrr)
library(dplyr)
library(tidytext)
library(textdata)
library(moments)
column_names <- names(read.csv("personalization_social_media_June 28, 2024_05.24.csv", nrows = 1))
#downloaded Qualtrics file
df <- read.csv("personalization_social_media_June 28, 2024_05.24.csv", sep=",", header = FALSE, skip=134, encoding='UTF-8')
names(df) <- column_names
df <- df %>%
mutate(across(starts_with("bookmarked"), ~ ifelse(is.na(.) | . == '', 'false', .)))%>%
mutate(upvote_regret=ifelse(upvote_regret==1,1,0))
duplicates <- df[duplicated(df$prolific), ]
##there is one p duplicate that produced no data twice. excluding it
df <- df[!duplicated(df$prolific), ]
prolificdf <- read.csv("prolific_export_667bcfe8d8e8186ce82f5edf.csv", sep=",", header = TRUE)
df= df %>%
left_join(prolificdf, by = c('prolific' = 'Participant.id'))
ratings_columns <- grep("^vote[0-9]+$", colnames(df), value = TRUE)
statement_columns <- grep("^title[0-9]+$", colnames(df), value = TRUE)
ratings_columns <- sort(ratings_columns)
statement_columns <- sort(statement_columns)
df_long_votes <- df %>%
select(prolific, all_of(ratings_columns)) %>%
pivot_longer(
cols = all_of(ratings_columns),
names_to = "number",
values_to = "vote",
names_pattern = "vote([0-9]+)"
)
df_long_titles <- df %>%
select(prolific, all_of(statement_columns)) %>%
pivot_longer(
cols = all_of(statement_columns),
names_to = "number",
values_to = "title",
names_pattern = "title([0-9]+)"
)
df_long_vote <- df_long_votes %>%
left_join(df_long_titles, by = c("prolific", "number"))
bookmark_columns <- grep("^bookmarked[0-9]+$", colnames(df), value = TRUE)
bookmarked_title_columns <- grep("^bookmarkedtitle[0-9]+$", colnames(df), value = TRUE)
bookmark_columns <- sort(bookmark_columns)
bookmarked_title_columns <- sort(bookmarked_title_columns)
df_long_bookmark <- df %>%
select(prolific, all_of(bookmark_columns)) %>%
pivot_longer(
cols = all_of(bookmark_columns),
names_to = "bookmarkorder",
values_to = "bookmarked",
names_pattern = "bookmarked([0-9]+)"
)
df_long_bookmarked_titles <- df %>%
select(prolific, all_of(bookmarked_title_columns)) %>%
pivot_longer(
cols = all_of(bookmarked_title_columns),
names_to = "bookmarkorder",
values_to = "bookmarkedtitle",
names_pattern = "bookmarkedtitle([0-9]+)"
)
df_long_bookmarked <- df_long_bookmark %>%
left_join(df_long_bookmarked_titles, by = c("prolific", "bookmarkorder"))
final_df <- df_long_vote %>%
left_join(df_long_bookmarked, by = c("prolific", "title" = "bookmarkedtitle"))
url <- "https://raw.githubusercontent.com/bencebago/news_personalization/main/filtered_data_experiment.json"
json_data <- fromJSON(url)
json_titles <-  c(json_data$title, json_data$selected_title_AbsoluteDenier)
final_df <- final_df %>%
mutate(type = ifelse(title %in% json_titles, 'climate', 'neutral'))
df = df%>%
mutate(climate_figure = ifelse(climate2==1, "Believer", ifelse(climate2==2|climate2==3, 'Denier', NA)),
climate_stat = ifelse(climate2==1, 0.5, ifelse(climate2==2|climate2==3, -0.5, 0)),
condition_stat = ifelse(condition=='original', 0.5, -0.5),
cause_change = prior_cause_1 - posterior_cause_1,
risk_change = prior_risk_1 - posterior_risk_1,
happen_change = prior_happen_1 - posterior_happen_1,
prior_happen_1_category = cut(prior_happen_1,
breaks = c(0, 25, 50, 75, 100),
include.lowest = TRUE,
labels = c("0-25", "26-50", "51-75", "76-100")),
prior_cause_1_category = cut(prior_cause_1,
breaks = c(0, 25, 50, 75, 100),
include.lowest = TRUE,
labels = c("0-25", "26-50", "51-75", "76-100")),
prior_cause_unscaled = prior_cause_1,
prior_happen_unscaled = prior_happen_1,
prior_risk_unscaled = prior_risk_1,
prior_cause_1 = scale(prior_cause_1),
prior_happen_1 = scale(prior_happen_1),
prior_risk_1 = scale(prior_risk_1),
Education = ifelse(Educational.Level > 3, 1, -1),
Partisanship = ifelse(DemRep_C < 4, DemRep_C-4, DemRep_C-3),
partisan_identity = ifelse(Partisanship < 0, 'Democrat', 'Republican'),
Q6..Ideology_econ = ifelse(Q6..Ideology_econ == 6, 0, Q6..Ideology_econ-3),
Q7..Ideology_social = ifelse(Q7..Ideology_social == 6, 0, Q7..Ideology_social-3),
Ideology = rowMeans(cbind(Q6..Ideology_econ, Q7..Ideology_social), na.rm = TRUE),
Ideology=scale(Ideology),
Partisanship=scale(Partisanship),
Interest = scale(Interest_1),
Sex = ifelse(Sex=='Female', -1, 1),
Age=scale(as.numeric(Age)))
####
additional_columns <- c("condition", "climate1", "climate2", "prior_cause_1", "prior_happen_1", "prior_risk_1",
"P2..Attention.Check1", "Q6..Ideology_econ", "Q7..Ideology_social", "DemRep_C",
"Interest_1", "Interest_2", "Interest_3", "Interest_4", "Interest_5", "Interest_6", "Interest_7",
"Educational.Level", "bookmark_regret_1", "upvote_regret", "credibility_1", "selectedValue",
"posterior_cause_1", "posterior_happen_1", "posterior_risk_1", 'Q110', 'Q111', 'Q133', 'Q134', 'condition_stat', 'climate_stat', 'climate_figure', 'condition_stat', 'Education', 'Age', 'Sex', 'Interest', 'Ideology', 'Partisanship','prior_happen_1_category','prior_cause_1_category', 'partisan_identity','prior_cause_unscaled', 'prior_risk_unscaled', 'prior_happen_unscaled')
additional_columns <- additional_columns[additional_columns %in% colnames(df)]
final_df <- final_df %>%
left_join(df %>% select(prolific, all_of(additional_columns)), by = "prolific")%>%
mutate(vote=ifelse(vote=='upvote',1,0),
bookmarked=ifelse(bookmarked=="true",1,0))
df2 <- df %>%
left_join(final_df %>% select(title, vote, prolific),
by = c("selectedValue" = "title", "prolific" = "prolific"))%>%
mutate(voteregret = ifelse(vote==1 & upvote_regret==1, '11', ifelse(vote==1 & upvote_regret==0, '10', ifelse(vote==0 & upvote_regret==1, '01', '00'))))
df2_clean_vote = df2 %>%
filter(voteregret== '10'| voteregret=='11')%>%
mutate(statvoteregret = ifelse(voteregret=='10', 1,0))
rm(list = setdiff(ls(), c("df", "final_df", 'df2_clean_vote')))
column_names <- names(read.csv("personalization_social_media_June 28, 2024_05.24.csv", nrows = 1))
#downloaded Qualtrics file
df <- read.csv("personalization_social_media_June 28, 2024_05.24.csv", sep=",", header = FALSE, skip=134, encoding='UTF-8')
names(df) <- column_names
df <- df %>%
mutate(across(starts_with("bookmarked"), ~ ifelse(is.na(.) | . == '', 'false', .)))%>%
mutate(upvote_regret=ifelse(upvote_regret==1,1,0))
duplicates <- df[duplicated(df$prolific), ]
##there is one p duplicate that produced no data twice. excluding it
df <- df[!duplicated(df$prolific), ]
prolificdf <- read.csv("prolific_export_667bcfe8d8e8186ce82f5edf.csv", sep=",", header = TRUE)
df= df %>%
left_join(prolificdf, by = c('prolific' = 'Participant.id'))
ratings_columns <- grep("^vote[0-9]+$", colnames(df), value = TRUE)
statement_columns <- grep("^title[0-9]+$", colnames(df), value = TRUE)
ratings_columns <- sort(ratings_columns)
statement_columns <- sort(statement_columns)
df_long_votes <- df %>%
select(prolific, all_of(ratings_columns)) %>%
pivot_longer(
cols = all_of(ratings_columns),
names_to = "number",
values_to = "vote",
names_pattern = "vote([0-9]+)"
)
df_long_titles <- df %>%
select(prolific, all_of(statement_columns)) %>%
pivot_longer(
cols = all_of(statement_columns),
names_to = "number",
values_to = "title",
names_pattern = "title([0-9]+)"
)
df_long_vote <- df_long_votes %>%
left_join(df_long_titles, by = c("prolific", "number"))
bookmark_columns <- grep("^bookmarked[0-9]+$", colnames(df), value = TRUE)
bookmarked_title_columns <- grep("^bookmarkedtitle[0-9]+$", colnames(df), value = TRUE)
bookmark_columns <- sort(bookmark_columns)
bookmarked_title_columns <- sort(bookmarked_title_columns)
df_long_bookmark <- df %>%
select(prolific, all_of(bookmark_columns)) %>%
pivot_longer(
cols = all_of(bookmark_columns),
names_to = "bookmarkorder",
values_to = "bookmarked",
names_pattern = "bookmarked([0-9]+)"
)
df_long_bookmarked_titles <- df %>%
select(prolific, all_of(bookmarked_title_columns)) %>%
pivot_longer(
cols = all_of(bookmarked_title_columns),
names_to = "bookmarkorder",
values_to = "bookmarkedtitle",
names_pattern = "bookmarkedtitle([0-9]+)"
)
df_long_bookmarked <- df_long_bookmark %>%
left_join(df_long_bookmarked_titles, by = c("prolific", "bookmarkorder"))
final_df <- df_long_vote %>%
left_join(df_long_bookmarked, by = c("prolific", "title" = "bookmarkedtitle"))
url <- "https://raw.githubusercontent.com/bencebago/news_personalization/main/filtered_data_experiment.json"
json_data <- fromJSON(url)
json_titles <-  c(json_data$title, json_data$selected_title_AbsoluteDenier)
final_df <- final_df %>%
mutate(type = ifelse(title %in% json_titles, 'climate', 'neutral'))
df = df%>%
mutate(climate_figure = ifelse(climate2==1, "Believer", ifelse(climate2==2|climate2==3, 'Denier', NA)),
climate_stat = ifelse(climate2==1, 0.5, ifelse(climate2==2|climate2==3, -0.5, 0)),
condition_stat = ifelse(condition=='original', 0.5, -0.5),
cause_change = prior_cause_1 - posterior_cause_1,
risk_change = prior_risk_1 - posterior_risk_1,
happen_change = prior_happen_1 - posterior_happen_1,
prior_happen_1_category = cut(prior_happen_1,
breaks = c(0, 25, 50, 75, 100),
include.lowest = TRUE,
labels = c("0-25", "26-50", "51-75", "76-100")),
prior_cause_1_category = cut(prior_cause_1,
breaks = c(0, 25, 50, 75, 100),
include.lowest = TRUE,
labels = c("0-25", "26-50", "51-75", "76-100")),
prior_cause_unscaled = prior_cause_1,
prior_happen_unscaled = prior_happen_1,
prior_risk_unscaled = prior_risk_1,
prior_cause_1 = scale(prior_cause_1),
prior_happen_1 = scale(prior_happen_1),
prior_risk_1 = scale(prior_risk_1),
posterior_cause_1 = scale(posterior_cause_1),
posterior_happen_1 = scale(posterior_happen_1),
posterior_risk_1 = scale(posterior_risk_1),
Education = ifelse(Educational.Level > 3, 1, -1),
Partisanship = ifelse(DemRep_C < 4, DemRep_C-4, DemRep_C-3),
partisan_identity = ifelse(Partisanship < 0, 'Democrat', 'Republican'),
Q6..Ideology_econ = ifelse(Q6..Ideology_econ == 6, 0, Q6..Ideology_econ-3),
Q7..Ideology_social = ifelse(Q7..Ideology_social == 6, 0, Q7..Ideology_social-3),
Ideology = rowMeans(cbind(Q6..Ideology_econ, Q7..Ideology_social), na.rm = TRUE),
Ideology=scale(Ideology),
Partisanship=scale(Partisanship),
Interest = scale(Interest_1),
Sex = ifelse(Sex=='Female', -1, 1),
Age=scale(as.numeric(Age)))
####
additional_columns <- c("condition", "climate1", "climate2", "prior_cause_1", "prior_happen_1", "prior_risk_1",
"P2..Attention.Check1", "Q6..Ideology_econ", "Q7..Ideology_social", "DemRep_C",
"Interest_1", "Interest_2", "Interest_3", "Interest_4", "Interest_5", "Interest_6", "Interest_7",
"Educational.Level", "bookmark_regret_1", "upvote_regret", "credibility_1", "selectedValue",
"posterior_cause_1", "posterior_happen_1", "posterior_risk_1", 'Q110', 'Q111', 'Q133', 'Q134', 'condition_stat', 'climate_stat', 'climate_figure', 'condition_stat', 'Education', 'Age', 'Sex', 'Interest', 'Ideology', 'Partisanship','prior_happen_1_category','prior_cause_1_category', 'partisan_identity','prior_cause_unscaled', 'prior_risk_unscaled', 'prior_happen_unscaled')
additional_columns <- additional_columns[additional_columns %in% colnames(df)]
final_df <- final_df %>%
left_join(df %>% select(prolific, all_of(additional_columns)), by = "prolific")%>%
mutate(vote=ifelse(vote=='upvote',1,0),
bookmarked=ifelse(bookmarked=="true",1,0))
df2 <- df %>%
left_join(final_df %>% select(title, vote, prolific),
by = c("selectedValue" = "title", "prolific" = "prolific"))%>%
mutate(voteregret = ifelse(vote==1 & upvote_regret==1, '11', ifelse(vote==1 & upvote_regret==0, '10', ifelse(vote==0 & upvote_regret==1, '01', '00'))))
df2_clean_vote = df2 %>%
filter(voteregret== '10'| voteregret=='11')%>%
mutate(statvoteregret = ifelse(voteregret=='10', 1,0))
rm(list = setdiff(ls(), c("df", "final_df", 'df2_clean_vote')))
#create item_level-bookmark and item level bookmarking situations.
# URL of the JSON file on GitHub
json_url <- "https://raw.githubusercontent.com/bencebago/news_personalization/main/filtered_relevant_articles_science.json"
json_data <- fromJSON(content(GET(json_url), "text", encoding = "UTF-8"))
json_data <- fromJSON(content(GET(json_url), "text", encoding = "UTF-8"))
find_row <- function(statement, df) {
for (i in seq_len(nrow(df))) {
if (statement %in% df[i, ]) {
return(i)
}
}
return(NA)
}
# Add item_nr to df
df <- df %>%
mutate(item_nr = map_int(selectedValue, ~ find_row(.x, json_data)))
# Add item_nr to final_df
final_df <- final_df %>%
mutate(item_nr = map_int(title, ~ find_row(.x, json_data)))
write.xlsx('final_df', climate_headlines_processed.xlsx)
write.csv('final_df', climate_headlines_processed.csv)
?write.csv
write.csv(final_df, 'climate_headlines_processed.csv')
column_names <- names(read.csv("personalization_social_media_June 28, 2024_05.24.csv", nrows = 1))
#downloaded Qualtrics file
df <- read.csv("personalization_social_media_June 28, 2024_05.24.csv", sep=",", header = FALSE, skip=134, encoding='UTF-8')
names(df) <- column_names
df <- df %>%
mutate(across(starts_with("bookmarked"), ~ ifelse(is.na(.) | . == '', 'false', .)))%>%
mutate(upvote_regret=ifelse(upvote_regret==1,1,0))
duplicates <- df[duplicated(df$prolific), ]
##there is one p duplicate that produced no data twice. excluding it
df <- df[!duplicated(df$prolific), ]
prolificdf <- read.csv("prolific_export_667bcfe8d8e8186ce82f5edf.csv", sep=",", header = TRUE)
df= df %>%
left_join(prolificdf, by = c('prolific' = 'Participant.id'))
ratings_columns <- grep("^vote[0-9]+$", colnames(df), value = TRUE)
statement_columns <- grep("^title[0-9]+$", colnames(df), value = TRUE)
ratings_columns <- sort(ratings_columns)
statement_columns <- sort(statement_columns)
df_long_votes <- df %>%
select(prolific, all_of(ratings_columns)) %>%
pivot_longer(
cols = all_of(ratings_columns),
names_to = "number",
values_to = "vote",
names_pattern = "vote([0-9]+)"
)
df_long_titles <- df %>%
select(prolific, all_of(statement_columns)) %>%
pivot_longer(
cols = all_of(statement_columns),
names_to = "number",
values_to = "title",
names_pattern = "title([0-9]+)"
)
df_long_vote <- df_long_votes %>%
left_join(df_long_titles, by = c("prolific", "number"))
bookmark_columns <- grep("^bookmarked[0-9]+$", colnames(df), value = TRUE)
bookmarked_title_columns <- grep("^bookmarkedtitle[0-9]+$", colnames(df), value = TRUE)
bookmark_columns <- sort(bookmark_columns)
bookmarked_title_columns <- sort(bookmarked_title_columns)
df_long_bookmark <- df %>%
select(prolific, all_of(bookmark_columns)) %>%
pivot_longer(
cols = all_of(bookmark_columns),
names_to = "bookmarkorder",
values_to = "bookmarked",
names_pattern = "bookmarked([0-9]+)"
)
df_long_bookmarked_titles <- df %>%
select(prolific, all_of(bookmarked_title_columns)) %>%
pivot_longer(
cols = all_of(bookmarked_title_columns),
names_to = "bookmarkorder",
values_to = "bookmarkedtitle",
names_pattern = "bookmarkedtitle([0-9]+)"
)
df_long_bookmarked <- df_long_bookmark %>%
left_join(df_long_bookmarked_titles, by = c("prolific", "bookmarkorder"))
final_df <- df_long_vote %>%
left_join(df_long_bookmarked, by = c("prolific", "title" = "bookmarkedtitle"))
url <- "https://raw.githubusercontent.com/bencebago/news_personalization/main/filtered_data_experiment.json"
json_data <- fromJSON(url)
json_titles <-  c(json_data$title, json_data$selected_title_AbsoluteDenier)
final_df <- final_df %>%
mutate(type = ifelse(title %in% json_titles, 'climate', 'neutral'))
df = df%>%
mutate(climate_figure = ifelse(climate2==1, "Believer", ifelse(climate2==2|climate2==3, 'Denier', NA)),
climate_stat = ifelse(climate2==1, 0.5, ifelse(climate2==2|climate2==3, -0.5, 0)),
condition_stat = ifelse(condition=='original', 0.5, -0.5),
cause_change = prior_cause_1 - posterior_cause_1,
risk_change = prior_risk_1 - posterior_risk_1,
happen_change = prior_happen_1 - posterior_happen_1,
prior_happen_1_category = cut(prior_happen_1,
breaks = c(0, 25, 50, 75, 100),
include.lowest = TRUE,
labels = c("0-25", "26-50", "51-75", "76-100")),
prior_cause_1_category = cut(prior_cause_1,
breaks = c(0, 25, 50, 75, 100),
include.lowest = TRUE,
labels = c("0-25", "26-50", "51-75", "76-100")),
prior_cause_unscaled = prior_cause_1,
prior_happen_unscaled = prior_happen_1,
prior_risk_unscaled = prior_risk_1,
#prior_cause_1 = scale(prior_cause_1),
#prior_happen_1 = scale(prior_happen_1),
#prior_risk_1 = scale(prior_risk_1),
#posterior_cause_1 = scale(posterior_cause_1),
#posterior_happen_1 = scale(posterior_happen_1),
#posterior_risk_1 = scale(posterior_risk_1),
Education = ifelse(Educational.Level > 3, 1, -1),
Partisanship = ifelse(DemRep_C < 4, DemRep_C-4, DemRep_C-3),
partisan_identity = ifelse(Partisanship < 0, 'Democrat', 'Republican'),
Q6..Ideology_econ = ifelse(Q6..Ideology_econ == 6, 0, Q6..Ideology_econ-3),
Q7..Ideology_social = ifelse(Q7..Ideology_social == 6, 0, Q7..Ideology_social-3),
Ideology = rowMeans(cbind(Q6..Ideology_econ, Q7..Ideology_social), na.rm = TRUE),
#Ideology=scale(Ideology),
#Partisanship=scale(Partisanship),
#Interest = scale(Interest_1),
Sex = ifelse(Sex=='Female', -1, 1),
Age=scale(as.numeric(Age)))
####
additional_columns <- c("condition", "climate1", "climate2", "prior_cause_1", "prior_happen_1", "prior_risk_1",
"P2..Attention.Check1", "Q6..Ideology_econ", "Q7..Ideology_social", "DemRep_C",
"Interest_1", "Interest_2", "Interest_3", "Interest_4", "Interest_5", "Interest_6", "Interest_7",
"Educational.Level", "bookmark_regret_1", "upvote_regret", "credibility_1", "selectedValue",
"posterior_cause_1", "posterior_happen_1", "posterior_risk_1", 'Q110', 'Q111', 'Q133', 'Q134', 'condition_stat', 'climate_stat', 'climate_figure', 'condition_stat', 'Education', 'Age', 'Sex', 'Interest', 'Ideology', 'Partisanship','prior_happen_1_category','prior_cause_1_category', 'partisan_identity','prior_cause_unscaled', 'prior_risk_unscaled', 'prior_happen_unscaled')
additional_columns <- additional_columns[additional_columns %in% colnames(df)]
final_df <- final_df %>%
left_join(df %>% select(prolific, all_of(additional_columns)), by = "prolific")%>%
mutate(vote=ifelse(vote=='upvote',1,0),
bookmarked=ifelse(bookmarked=="true",1,0))
df2 <- df %>%
left_join(final_df %>% select(title, vote, prolific),
by = c("selectedValue" = "title", "prolific" = "prolific"))%>%
mutate(voteregret = ifelse(vote==1 & upvote_regret==1, '11', ifelse(vote==1 & upvote_regret==0, '10', ifelse(vote==0 & upvote_regret==1, '01', '00'))))
df2_clean_vote = df2 %>%
filter(voteregret== '10'| voteregret=='11')%>%
mutate(statvoteregret = ifelse(voteregret=='10', 1,0))
rm(list = setdiff(ls(), c("df", "final_df", 'df2_clean_vote')))
json_url <- "https://raw.githubusercontent.com/bencebago/news_personalization/main/filtered_relevant_articles_science.json"
json_data <- fromJSON(content(GET(json_url), "text", encoding = "UTF-8"))
find_row <- function(statement, df) {
for (i in seq_len(nrow(df))) {
if (statement %in% df[i, ]) {
return(i)
}
}
return(NA)
}
# Add item_nr to df
df <- df %>%
mutate(item_nr = map_int(selectedValue, ~ find_row(.x, json_data)))
# Add item_nr to final_df
final_df <- final_df %>%
mutate(item_nr = map_int(title, ~ find_row(.x, json_data)))
write.csv(final_df, 'climate_headlines_processed.csv')
>fromJSON
?fromJSON
